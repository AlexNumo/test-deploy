{"version":3,"file":"static/js/ActorPage.ef9f411c.chunk.js","mappings":"0QAEMA,EAAYC,EAAAA,GAAAA,IAAH,8FAMTC,EAAWD,EAAAA,GAAAA,GAAH,kHAORE,EAAWF,EAAAA,GAAAA,GAAH,uIAQRG,EAAeH,EAAAA,GAAAA,IAAH,6IAQLI,EAAO,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACpB,OACE,SAACN,EAAD,UACGM,IACC,yBACGA,EAAMC,OAAS,IACd,SAACL,EAAD,UACGI,EAAME,KAAI,SAAAC,GACT,OAAO,SAACN,EAAD,WACL,2BACGM,EAAKC,eACJ,gBAAKC,IAAG,yCAAoCF,EAAKC,cAAgBE,IAAKH,EAAKI,QAE7E,UAACT,EAAD,YACE,kCAAUK,EAAKI,SACf,uCAAeJ,EAAKK,oBAPJL,EAAKM,cCjC9BC,EAAY,WACvB,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,OACP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaW,EAAb,KAaA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaL,GAFpC,OAEUR,EAFV,OAGIW,EAAQX,GAHZ,gDAKIc,EAAAA,GAAAA,MAAY,yBALhB,0DADc,uBAAC,WAAD,wBASdC,KACA,CAACP,KAGD,8BACGR,IAAQ,SAACJ,EAAD,CAAMC,MAAOG,Q,0MCpBtBgB,EAAa,mCACnBC,IAAAA,SAAAA,QAAA,UAFiB,iCAKV,IAAMC,EAAU,mCAAG,oGACCD,IAAAA,IAAA,sCAAyCD,IAD1C,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qDAKVC,EAAY,mCAAG,WAAOf,GAAP,uFACDW,IAAAA,IAAA,gBAAmBX,EAAnB,oBAAiCU,EAAjC,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZP,EAAY,mCAAG,WAAOP,GAAP,uFACDW,IAAAA,IAAA,iBAAoBX,EAApB,4BAA0CU,EAA1C,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKE,MAFG,2CAAH,sDAKZC,EAAU,mCAAG,WAAOjB,GAAP,uFACCW,IAAAA,IAAA,iBAAoBX,EAApB,4BAA0CU,EAA1C,oBADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKI,SAFC,2CAAH,sDAKVC,EAAc,mCAAG,WAAOC,GAAP,uFACHT,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAuDU,EAAvD,yBADG,cACpBP,EADoB,yBAEnBA,EAASC,KAAKI,SAFK,2CAAH","sources":["components/Cast/Cast.jsx","Pages/ActorPage/ActorPage.jsx","Services/FetchAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst CastStyle = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst CastList = styled.ul`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst CastCard = styled.li`\n  margin: 5px 5px 5px 5px;\n  list-style-type: none;\n  border: solid 1px;\n  width: 300px;\n  height: 540px;\n`\n\nconst CastCardInfo = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nexport const Cast = ({items}) => {\n  return (\n    <CastStyle>\n      {items && (\n        <div>\n          {items.length > 0 && (\n            <CastList>\n              {items.map(item => {\n                return <CastCard key={item.id}>\n                  <div>\n                    {item.profile_path && (\n                      <img src={`https://image.tmdb.org/t/p/w300${item.profile_path}`} alt={item.name}/>)\n                    }\n                    <CastCardInfo>\n                      <p>Name: {item.name}</p>\n                      <p>Character: {item.character}</p>\n                    </CastCardInfo>\n                  </div>\n                </CastCard>\n                }\n              )}\n            </CastList>\n          )}\n        </div>\n      )}\n    </CastStyle>\n\n\n  );\n};\n\n  ","import {getMovieCast} from \"../../Services/FetchAPI\";\nimport {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {toast} from \"react-hot-toast\";\nimport {Cast} from \"../../components/Cast/Cast\";\n\nexport const ActorPage = () => {\n  const {itemId} = useParams()\n  const [item, setItem] = useState(null)\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieCast(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('information not found')\n      }\n    }\n    fetchItem()\n  },[itemId])\n\n  return (\n    <>\n      {item && <Cast items={item}/>}\n    </>\n\n  );\n};\n\n","import axios from 'axios';\n\nconst defaultPath = `https://api.themoviedb.org/3/`;\nconst API_KEY_V3 = '978764fb47932f9f815a23ce8e89a8be';\naxios.defaults.baseURL = `${defaultPath}`;\n\n\nexport const getPopular = async () =>{\n    const response = await axios.get(`trending/movie/week?api_key=${API_KEY_V3}`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) =>{\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY_V3}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY_V3}&language=en-US`)\n    return response.data.cast;\n  }\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY_V3}&language=en-US`)\n    return response.data.results;\n}\n\nexport const getFoundMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY_V3}&query=${query}&include_adult=false`)\n    return response.data.results;\n  }"],"names":["CastStyle","styled","CastList","CastCard","CastCardInfo","Cast","items","length","map","item","profile_path","src","alt","name","character","id","ActorPage","itemId","useParams","useState","setItem","useEffect","getMovieCast","toast","fetchItem","API_KEY_V3","axios","getPopular","response","data","getMovieById","cast","getReviews","results","getFoundMovies","query"],"sourceRoot":""}