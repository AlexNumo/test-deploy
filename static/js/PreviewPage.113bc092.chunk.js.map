{"version":3,"file":"static/js/PreviewPage.113bc092.chunk.js","mappings":"gPAAaA,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACjBC,EAAc,IAAIC,KAAKF,EAAKG,cAAcC,cAC9C,OACA,gCACE,0BAAKJ,EAAKK,MAAV,KAAiB,0BAAOJ,OACF,OAArBD,EAAKM,cAAwB,gBAAKC,IAAG,yCAAoCP,EAAKM,aAAeE,IAAKR,EAAKK,SACxG,wCAAkC,GAAlBL,EAAKS,aAArB,QACA,sCAAcT,EAAKU,aACnB,qCACA,uBAAIV,EAAKW,OAAOC,KAAI,YAAc,IAAZC,EAAW,EAAXA,GAAGC,EAAQ,EAARA,KACvB,OAAO,4BAAgBA,EAAhB,MAAWD,SAEpB,sB,UCNKE,EAAc,WACzB,IAAOC,GAAUC,EAAAA,EAAAA,MAAVD,OACP,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOlB,EAAP,KAAamB,EAAb,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAaP,GAFpC,OAEUhB,EAFV,OAGImB,EAAQnB,GAHZ,gDAKIwB,EAAAA,GAAAA,MAAY,2BALhB,0DADc,uBAAC,WAAD,wBASdC,KACC,CAACT,KAGF,4BACE,mBAAQU,QAhBG,kBAAMN,GAAU,IAgB3B,qBACCpB,IAAQ,SAACD,EAAD,CAAWC,KAAMA,KAC1B,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAS2B,GAAG,OAAZ,qBAIF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,8BAMN,SAAC,KAAD,S,0MCzCAC,EAAa,mCACnBC,IAAAA,SAAAA,QAAA,UAFiB,iCAKV,IAAMC,EAAU,mCAAG,oGACCD,IAAAA,IAAA,sCAAyCD,IAD1C,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qDAKVT,EAAY,mCAAG,WAAOV,GAAP,uFACDgB,IAAAA,IAAA,gBAAmBhB,EAAnB,oBAAiCe,EAAjC,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZC,EAAY,mCAAG,WAAOpB,GAAP,uFACDgB,IAAAA,IAAA,iBAAoBhB,EAApB,4BAA0Ce,EAA1C,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKE,MAFG,2CAAH,sDAKZC,EAAU,mCAAG,WAAOtB,GAAP,uFACCgB,IAAAA,IAAA,iBAAoBhB,EAApB,4BAA0Ce,EAA1C,oBADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKI,SAFC,2CAAH,sDAKVC,EAAc,mCAAG,WAAOC,GAAP,uFACHT,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAuDU,EAAvD,yBADG,cACpBP,EADoB,yBAEnBA,EAASC,KAAKI,SAFK,2CAAH","sources":["components/MovieCard/MovieCard.jsx","Pages/PreviewPage/PreviewPage.jsx","Services/FetchAPI.jsx"],"sourcesContent":["export const MovieCard = ({item}) => {\n    const releaseYear = new Date(item.release_date).getFullYear()\n      return (\n      <article>\n        <h2>{item.title} <span>{releaseYear}</span></h2>\n        {item.poster_path !== null && <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.title}/>}\n        <p>User score: {item.vote_average*10}%</p>\n        <p>Overview: {item.overview}</p>\n        <p>Genres: </p>\n        <p>{item.genres.map(({id,name})=>{\n          return <span key={id}>{name} </span>\n        })}</p>\n        <hr/>\n      </article>\n    )\n  };\n  \n  ","import { NavLink, useParams, Outlet, useNavigate} from \"react-router-dom\";\nimport {getMovieById} from \"../../Services/FetchAPI\";\nimport {useEffect, useState} from \"react\";\nimport {MovieCard} from \"../../components/MovieCard/MovieCard\";\nimport {toast} from \"react-hot-toast\";\n\nexport const PreviewPage = () => {\n  const {itemId} = useParams();\n  const [item, setItem] = useState(null);\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(-1);\n\n  useEffect(() => {\n    async function fetchItem(){\n      try{\n        const item = await getMovieById(itemId);\n        setItem(item)\n      } catch (error){\n        toast.error('NOT FOUND, PLEASE ENTRY')\n      }\n    }\n    fetchItem()\n  }, [itemId])\n\n  return (\n    <div>\n      <button onClick={goBack}>Go Back</button>\n      {item && <MovieCard item={item}/>}\n      <div>\n        <p>Additional information</p>\n        <ul>\n          <li>\n            <NavLink to='cast'>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to='reviews'>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n      <Outlet/>\n    </div>)\n};","import axios from 'axios';\n\nconst defaultPath = `https://api.themoviedb.org/3/`;\nconst API_KEY_V3 = '978764fb47932f9f815a23ce8e89a8be';\naxios.defaults.baseURL = `${defaultPath}`;\n\n\nexport const getPopular = async () =>{\n    const response = await axios.get(`trending/movie/week?api_key=${API_KEY_V3}`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) =>{\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY_V3}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY_V3}&language=en-US`)\n    return response.data.cast;\n  }\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY_V3}&language=en-US`)\n    return response.data.results;\n}\n\nexport const getFoundMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY_V3}&query=${query}&include_adult=false`)\n    return response.data.results;\n  }"],"names":["MovieCard","item","releaseYear","Date","release_date","getFullYear","title","poster_path","src","alt","vote_average","overview","genres","map","id","name","PreviewPage","itemId","useParams","useState","setItem","navigate","useNavigate","useEffect","getMovieById","toast","fetchItem","onClick","to","API_KEY_V3","axios","getPopular","response","data","getMovieCast","cast","getReviews","results","getFoundMovies","query"],"sourceRoot":""}