{"version":3,"file":"static/js/SearchMoviesPage.09b77e9a.chunk.js","mappings":"6QAGMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sHAsBf,EAfkB,SAAC,GAAc,IAAZE,EAAW,EAAXA,KACjB,OACI,0BACI,wBACKA,EAAKC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAN,OACN,yBAEI,SAACN,EAAD,CAAWO,GAAE,kBAAaF,GAA1B,SAAiCC,KAD5BD,W,UCZvBG,EAAkBP,EAAAA,GAAAA,OAAH,8DAKRQ,EAAe,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC1B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OACI,0BACI,kBAAMH,SAXO,SAAAI,GAEjB,GADAA,EAAEC,iBACmB,KAAlBH,EAAOI,OACN,OAAOC,MAAM,gBAEjBP,EAASE,GACTC,EAAU,KAKwBK,UAAU,OAAxC,WACI,kBAAQC,KAAK,QACLC,KAAK,OACLC,YAAY,gBACZC,SAnBK,SAAAR,GACrBD,EAAUC,EAAES,cAAcC,MAAMC,mBAmBpB,UAACjB,EAAD,CAAiBY,KAAK,SAASF,UAAU,SAAzC,WACI,SAAC,MAAD,KACA,8CC+BxB,EA3DyB,WAEvB,OAA0BP,EAAAA,EAAAA,UAAS,IAAnC,eAAOe,EAAP,KAAcC,EAAd,KACA,GAA0BhB,EAAAA,EAAAA,UAAS,IAAnC,eAAOiB,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MACjBtB,GADN,eAC4BuB,IAAI,UAEhCC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,gHAEuBC,EAAAA,EAAAA,IAAeX,GAFtC,OAEUY,EAFV,OAGUC,EAAYD,EAAKlC,KAAI,kBAAkB,CAACC,GAAnB,EAAEA,GAAqBC,MAAvB,EAAMA,UACjCuB,EAASU,GAJb,0GALc,sBACD,KAAVb,GADW,mCAedc,KACC,CAACd,KAEJU,EAAAA,EAAAA,YAAU,WAAM,wCAKd,gHAEuBC,EAAAA,EAAAA,IAAezB,GAFtC,OAEU0B,EAFV,OAGUG,EAAcH,EAAKlC,KAAI,kBAAyC,CAACC,GAA1C,EAAEA,GAA4CqC,SAA9C,EAAMA,SAAkDC,YAAxD,EAAgBA,YAAqDrC,MAArE,EAA6BA,UAC1DuB,EAASY,GAJb,0GALc,sBACA,OAAX7B,GADW,mCAcd4B,KACC,CAAC5B,IAQJ,OACE,iCACE,SAACH,EAAD,CAAcC,SAPF,SAACkC,GACfjB,EAASiB,GACTZ,GAAS,kBAAIF,GAAL,IAAelB,OAAO,SAAD,OAAWgC,UAMtC,SAAC,EAAD,CAAWzC,KAAMyB,S,0MCxDjBiB,EAAa,mCACnBC,IAAAA,SAAAA,QAAA,UAFiB,iCAKV,IAAMC,EAAU,mCAAG,oGACCD,IAAAA,IAAA,sCAAyCD,IAD1C,cAChBG,EADgB,yBAEfA,EAASC,MAFM,2CAAH,qDAKVC,EAAY,mCAAG,WAAO7C,GAAP,uFACDyC,IAAAA,IAAA,gBAAmBzC,EAAnB,oBAAiCwC,EAAjC,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,MAFQ,2CAAH,sDAKZE,EAAY,mCAAG,WAAO9C,GAAP,uFACDyC,IAAAA,IAAA,iBAAoBzC,EAApB,4BAA0CwC,EAA1C,oBADC,cAClBG,EADkB,yBAEjBA,EAASC,KAAKG,MAFG,2CAAH,sDAKZC,EAAU,mCAAG,WAAOhD,GAAP,uFACCyC,IAAAA,IAAA,iBAAoBzC,EAApB,4BAA0CwC,EAA1C,oBADD,cAChBG,EADgB,yBAEfA,EAASC,KAAKK,SAFC,2CAAH,sDAKVjB,EAAc,mCAAG,WAAOX,GAAP,uFACHoB,IAAAA,IAAA,gCAAmCD,EAAnC,kBAAuDnB,EAAvD,yBADG,cACpBsB,EADoB,yBAEnBA,EAASC,KAAKK,SAFK,2CAAH","sources":["components/Movieinfo/Movieinfo.jsx","components/SearchMovies/SearchMovies.jsx","Pages/SearchMoviesPage/SearchMoviesPage.jsx","Services/FetchAPI.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst MovieLink = styled(NavLink)`\n    display: flex;\n    padding: 5px 5px 5px 5px;\n      &.active {\n    color: tomato;\n  }\n`\nconst MovieInfo = ({ hits }) => {\n    return (\n        <div>\n            <ul>\n                {hits.map(({id, title}) => (\n                    <li\n                        key={id}>\n                        <MovieLink to={`/movies/${id}`}>{title}</MovieLink>\n                    </li>\n            ))}\n        </ul>\n        </div>\n    )\n}\n\nexport default MovieInfo;","import {ImSearch} from 'react-icons/im';\nimport { useState } from 'react';\nimport styled from 'styled-components';\n\nconst LinkButtonStyle = styled.button`\n    width: 100px;\n    height: 25px;\n`\n\nexport const SearchMovies = ({onSubmit}) => {\n    const [search, setSearch] = useState('');\n\n    const handleNameChange = e => {\n        setSearch(e.currentTarget.value.toLowerCase());\n    };\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if(search.trim() === '') {\n            return alert('Please entry')\n        }\n        onSubmit(search);\n        setSearch('');\n    };\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit} className=\"form\">\n                <input  name='query'\n                        type=\"text\"\n                        placeholder=\"Search movies\"\n                        onChange={handleNameChange}/>\n                    <LinkButtonStyle type=\"submit\" className=\"button\">\n                        <ImSearch />\n                        <span>Search</span>\n                    </LinkButtonStyle>\n            </form>\n        </div>\n    )}\n","import {useEffect, useState} from \"react\";\nimport {useLocation, useNavigate, useSearchParams} from \"react-router-dom\";\nimport {getFoundMovies} from \"../../Services/FetchAPI\";\nimport MovieInfo from \"../../components/Movieinfo/Movieinfo\";\nimport {SearchMovies} from \"../../components/SearchMovies/SearchMovies\";\n\nconst SearchMoviesPage = () => {\n\n  const [query, setQuery] = useState('');\n  const [found, setFound] = useState([]);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const search = searchParams.get('query');\n\n  useEffect(() => {\n    if(query === '') {\n      return\n    }\n\n    async function fetchItem(){\n      try{\n        const item = await getFoundMovies(query);\n        const movieItem = item.map(({id, title}) => ({id, title}))\n        setFound(movieItem)\n\n      } catch (error){\n      }\n    }\n\n    fetchItem()\n  }, [query])\n\n  useEffect(() => {\n    if(search === null) {\n      return\n    }\n\n    async function fetchItem(){\n      try{\n        const item = await getFoundMovies(search)\n        const searchMovie = item.map(({id, overview, poster_path, title}) => ({id, overview, poster_path, title}))\n        setFound(searchMovie)\n      } catch (error){\n      }\n    }\n\n    fetchItem()\n  }, [search])\n\n\n  const forForm = (searchQuery) => {\n    setQuery(searchQuery);\n    navigate({...location, search: `query=${searchQuery}`})\n  }\n\n  return (\n    <>\n      <SearchMovies onSubmit={forForm}/>\n      <MovieInfo hits={found}/>\n    </>\n\n  );\n};\n\nexport default SearchMoviesPage;","import axios from 'axios';\n\nconst defaultPath = `https://api.themoviedb.org/3/`;\nconst API_KEY_V3 = '978764fb47932f9f815a23ce8e89a8be';\naxios.defaults.baseURL = `${defaultPath}`;\n\n\nexport const getPopular = async () =>{\n    const response = await axios.get(`trending/movie/week?api_key=${API_KEY_V3}`);\n    return response.data;\n};\n\nexport const getMovieById = async (id) =>{\n    const response = await axios.get(`movie/${id}?api_key=${API_KEY_V3}&language=en-US`);\n    return response.data;\n};\n\nexport const getMovieCast = async (id) => {\n    const response = await axios.get(`/movie/${id}/credits?api_key=${API_KEY_V3}&language=en-US`)\n    return response.data.cast;\n  }\n\nexport const getReviews = async (id) => {\n    const response = await axios.get(`/movie/${id}/reviews?api_key=${API_KEY_V3}&language=en-US`)\n    return response.data.results;\n}\n\nexport const getFoundMovies = async (query) => {\n    const response = await axios.get(`/search/movie?api_key=${API_KEY_V3}&query=${query}&include_adult=false`)\n    return response.data.results;\n  }"],"names":["MovieLink","styled","NavLink","hits","map","id","title","to","LinkButtonStyle","SearchMovies","onSubmit","useState","search","setSearch","e","preventDefault","trim","alert","className","name","type","placeholder","onChange","currentTarget","value","toLowerCase","query","setQuery","found","setFound","location","useLocation","navigate","useNavigate","useSearchParams","get","useEffect","getFoundMovies","item","movieItem","fetchItem","searchMovie","overview","poster_path","searchQuery","API_KEY_V3","axios","getPopular","response","data","getMovieById","getMovieCast","cast","getReviews","results"],"sourceRoot":""}